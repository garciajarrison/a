package co.com.avaluo.model.entity;
// Generated 20/07/2018 05:27:56 PM by Hibernate Tools 4.0.1.Final

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Cotizacion generated by hbm2java
 */
@Entity
@Table(name = "cotizacion", schema = "avalsoft")
public class Cotizacion implements java.io.Serializable {

	private int id;
	private Usuario usuarioByClienteId;
	private Usuario usuarioByRemitenteId;
	private Empresa empresa;
	private BigDecimal valor;
	private Set<DetalleCotizacion> detalleCotizacions = new HashSet<DetalleCotizacion>(0);

	public Cotizacion() {
	}

	public Cotizacion(int id, Usuario usuarioByClienteId, Usuario usuarioByRemitenteId, Empresa empresa) {
		this.id = id;
		this.usuarioByClienteId = usuarioByClienteId;
		this.usuarioByRemitenteId = usuarioByRemitenteId;
		this.empresa = empresa;
	}

	public Cotizacion(int id, Usuario usuarioByClienteId, Usuario usuarioByRemitenteId, Empresa empresa,
			BigDecimal valor, Set<DetalleCotizacion> detalleCotizacions) {
		this.id = id;
		this.usuarioByClienteId = usuarioByClienteId;
		this.usuarioByRemitenteId = usuarioByRemitenteId;
		this.empresa = empresa;
		this.valor = valor;
		this.detalleCotizacions = detalleCotizacions;
	}

	@Id
	@GeneratedValue( strategy=GenerationType.IDENTITY)
	@Column(columnDefinition = "serial", name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "cliente_id", nullable = false)
	public Usuario getUsuarioByClienteId() {
		return this.usuarioByClienteId;
	}

	public void setUsuarioByClienteId(Usuario usuarioByClienteId) {
		this.usuarioByClienteId = usuarioByClienteId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "remitente_id", nullable = false)
	public Usuario getUsuarioByRemitenteId() {
		return this.usuarioByRemitenteId;
	}

	public void setUsuarioByRemitenteId(Usuario usuarioByRemitenteId) {
		this.usuarioByRemitenteId = usuarioByRemitenteId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "empresa_id", nullable = false)
	public Empresa getEmpresa() {
		return this.empresa;
	}

	public void setEmpresa(Empresa empresa) {
		this.empresa = empresa;
	}

	@Column(name = "valor", precision = 131089, scale = 0)
	public BigDecimal getValor() {
		return this.valor;
	}

	public void setValor(BigDecimal valor) {
		this.valor = valor;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "cotizacion")
	public Set<DetalleCotizacion> getDetalleCotizacions() {
		return this.detalleCotizacions;
	}

	public void setDetalleCotizacions(Set<DetalleCotizacion> detalleCotizacions) {
		this.detalleCotizacions = detalleCotizacions;
	}

}
